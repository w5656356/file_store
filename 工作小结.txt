1.计算属性主要用于一个变量的存在依赖于另外一个变量的时候使用。计算属性是惰性的，只要他所依赖的变量没有改变，那么他就直接调用上次的缓存。对应的函数或者表达式也不会执行。而不同函数或者表达式则不管依赖的变量是否变化，都会执行。所以，当我们需要响应式依赖，如时间内置API的时候，我们不要使用计算属性，因为他的值不会变化，他不是响应式依赖。总结来说：
我们为什么需要缓存？假设我们有一个性能开销比较大的的计算属性 A，它需要遍历一个巨大的数组并做大量的计算。然后我们可能有其他的计算属性依赖于 A 。如果没有缓存，我们将不可避免的多次执行 A 的 getter！如果你不希望有缓存，请用方法来替代。


2.观察属性有CD，基本和我们输入单词的速度差不多。观察属性可以调用函数，且可以是异步函数。


getQuestionList, deleteQuestionBatch

import {paperList} from '../../api/paper/paper'


paperList().then(response => {
                    console.log(response)
                })